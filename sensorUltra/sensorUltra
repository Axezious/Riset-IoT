#include <LiquidCrystal_I2C.h>
#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <PubSubClient.h>
// set the LCD number of columns and rows
int lcdColumns = 16;
int lcdRows = 2;
// set LCD address, number of columns and rows
// if you don't know your display address, run an I2C scanner sketch
LiquidCrystal_I2C lcd(0x3F, lcdColumns, lcdRows); 
#define echoPin D7 // Echo Pin
#define trigPin D6 // Trigger Pin
const char* ssid = "Raspi-Router-02";
const char* password = "123456789";
const char* mqtt_server = "192.168.10.1"; 
const char* mqtt_user = "admin";
const char* mqtt_pass= "123456";

WiFiClient espClient;
PubSubClient client(espClient);

long duration, distance; 

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    
    // char str[10];
    // sprintf(str, "%d", sV);
  
    Serial.print("Attempting MQTT connection...");
    // Attempt to connect
    if (client.connect("arduinoClient3", mqtt_user, mqtt_pass)) {
      Serial.println("connected");
      // Once connected, publish an announcement...
      // client.publish("modul_sensor_01",str);
      // ... and resubscribe
      // client.subscribe("inTopic");
      delay(1000);
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(1000);
    }
  }
}

void setup()
{
  WiFi.begin(ssid, password);
  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  lcd.init();
  // turn on LCD backlight                      
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(1,0);
  // print message
  lcd.print("  DISTANCE");
  lcd.setCursor(9,1);
  lcd.print(" cm");
  client.setServer(mqtt_server, 1883);
  Serial.begin(9600); // starts the serial port at 9600
 
}
 
void loop()
{
  if (!client.connected()) {
    reconnect();
  }
 digitalWrite(trigPin, LOW);
 delayMicroseconds(2);
 digitalWrite(trigPin, HIGH);
 delayMicroseconds(10);
 digitalWrite(trigPin, LOW);
 duration = pulseIn(echoPin, HIGH);
//Calculate the distance (in cm) based on the speed of sound.
//distance = duration/58.2;
distance = (duration/2) / 29.1;
Serial.println(distance);
 lcd.setCursor(4,1);
 lcd.print(distance);
 char str[100];
 int dstnc;
 dstnc = (int)distance;
 sprintf(str, "%i", dstnc);
 client.publish("s03ultra", str);
 client.loop(); 
 delay(300000); 
  
}
