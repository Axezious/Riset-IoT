#include <LiquidCrystal_I2C.h>
#include <LiquidCrystal_I2C.h>
#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <PubSubClient.h>
// set the LCD number of columns and rows
int lcdColumns = 16;
int lcdRows = 2;

// set LCD address, number of columns and rows
// if you don't know your display address, run an I2C scanner sketch
LiquidCrystal_I2C lcd(0x27, lcdColumns, lcdRows); 
//int sensorValue;
 int sensor_pin =A0;
int output_value;

const char* ssid = "Raspi-Router-02";
const char* password = "123456789";
const char* mqtt_server = "192.168.10.1"; 
const char* mqtt_user = "admin";
const char* mqtt_pass= "123456";

WiFiClient espClient;
PubSubClient client(espClient);

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    
    // char str[10];
    // sprintf(str, "%d", sV);
  
    Serial.print("Attempting MQTT connection...");
    // Attempt to connect
    if (client.connect("arduinoClient5", mqtt_user, mqtt_pass)) {
      Serial.println("connected");
      // Once connected, publish an announcement...
      // client.publish("modul_sensor_01",str);
      // ... and resubscribe
      // client.subscribe("inTopic");
      delay(1000);
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(1000);
    }
  }
}

void setup()
{

  WiFi.begin(ssid, password);
  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  lcd.init();
  // turn on LCD backlight                      
  lcd.backlight();
  lcd.setCursor(2,0);
  // print message
  lcd.print("Tekanan Udara");
  lcd.setCursor(9,1);
  lcd.print(" kPa");
  client.setServer(mqtt_server, 1883);  
  Serial.begin(9600); // starts the serial port at 9600
}
 
void loop()
{
  if (!client.connected()) {
    reconnect();
  }
  // Wait a few seconds between measurements.
 // delay(2000);
  //sensorValue = analogRead(A0); // read analog input pin 0
  int output= analogRead(sensor_pin);
  float v = output*(5.0/1023.0);
  float Tekanan = ((v/5.0)-0.04)/0.0012858;
  Serial.print("Tekanan :  ");
  Serial.print(Tekanan);
  Serial.println("kpa");
  //Serial.print(sensorValue); // prints the value read
  //Serial.print(" \n"); // prints a space between the numbers
  // wait 100ms for next reading
  lcd.setCursor(4,1);
  lcd.print(Tekanan);
  char str[100];
  int x = (int)Tekanan;
  sprintf(str, "%i",x);
  client.publish("s05tekud", str);
  client.loop();
  delay(300000); 
  
}
